name: Calorie Tracker CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.npm
          **/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        
    - name: Install dependencies
      run: |
        npm install
        cd server && npm install
        
    - name: Run client tests
      run: npm test
      
    - name: Run server tests
      run: cd server && npm test
      
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.npm
          **/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build client
      run: npm run build
      
    - name: Build server
      run: cd server && npm run build
      
    - name: Serve and test production build
      run: |
        npm install -g serve
        serve -s build -l 3000 &
        sleep 5
        curl http://localhost:3000
      
    - name: Upload client artifact
      uses: actions/upload-artifact@v2
      with:
        name: client-build
        path: build
        
    - name: Upload server artifact
      uses: actions/upload-artifact@v2
      with:
        name: server-build
        path: server/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Install Vercel CLI
      run: npm install -g vercel
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Build with Vercel
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy server to Heroku
      run: |
        git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
        git subtree push --prefix server heroku main
    
    - name: Notify Slack
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: 'Deployment status'
        SLACK_MESSAGE: 'Deployment ${{ job.status }}'